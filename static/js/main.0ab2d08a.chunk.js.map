{"version":3,"sources":["components/Header.js","components/AddedFeature.js","store/actions/actionTypes.js","components/AddedFeatures.js","components/AdditionalFeature.js","components/AdditionalFeatures.js","components/Total.js","App.js","store/reducers/index.js","index.js"],"names":["Header","props","className","src","car","image","alt","name","price","connect","dispatch","removeFeature","id","val","item","type","featureId","featurePrice","actionTypes","onClick","index","feature","AddedFeatures","features","length","map","key","Math","random","addFeature","AdditionalFeatures","additionalFeatures","Total","additionalPrice","state","initialState","reducer","action","addedItem","filter","push","removedItem","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0ab2d08a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = props => {\n  return (\n    <>\n      <figure className=\"image is-128x128\">\n        <img src={props.car.image} alt={props.car.name} />\n      </figure>\n      <h2>{props.car.name}</h2>\n      <p>Amount: ${props.car.price}</p>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../store/actions\";\n\nconst AddedFeature = props => {\n  return (\n    <li>\n      {/* Add an onClick to run a function to remove a feature */}\n      <button\n        className=\"button\"\n        onClick={\n          // use index instead as if added multiple of same\n          // feature, on remove, it removes all with same id\n          () => props.removeFeature(props.index, props.feature.price)\n          // if you want to remove by same id, use below\n          // props.removeFeature(props.feature.id, props.feature.price)\n        }\n      >\n        X\n      </button>\n      {props.feature.name}\n    </li>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeFeature: (id, val) => dispatch(actionTypes.remove(id, val))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AddedFeature);\n","export const ADD = \"ADD\";\nexport const REMOVE = \"REMOVE\";\n\nexport const add = (item, val) => {\n  return {\n    type: ADD,\n    featureId: item,\n    featurePrice: val\n  };\n};\n\nexport const remove = (item, val) => {\n  return {\n    type: REMOVE,\n    featureId: item,\n    featurePrice: val\n  };\n};\n","import React from \"react\";\n\nimport AddedFeature from \"./AddedFeature\";\n\nconst AddedFeatures = props => {\n  return (\n    <div className=\"content\">\n      <h6>Added features:</h6>\n      {props.car.features.length > 0 ? (\n        <ol type=\"1\">\n          {props.car.features.map((item, index) => (\n            <AddedFeature\n              key={Math.random()}\n              feature={item}\n              index={index}\n              removeFeature={props.removeFeature}\n            />\n          ))}\n        </ol>\n      ) : (\n        <p>You can purchase items from the store.</p>\n      )}\n    </div>\n  );\n};\n\nexport default AddedFeatures;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../store/actions\";\n\nconst AdditionalFeature = props => {\n  return (\n    <li>\n      {/* Add an onClick that will let you add a feature to your car */}\n      <button\n        className=\"button\"\n        onClick={() => props.addFeature(props.feature.id, props.feature.price)}\n      >\n        Add\n      </button>\n      {props.feature.name} (+{props.feature.price})\n    </li>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addFeature: (id, val) => dispatch(actionTypes.add(id, val))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AdditionalFeature);\n","import React from \"react\";\nimport AdditionalFeature from \"./AdditionalFeature\";\n\nconst AdditionalFeatures = props => {\n  return (\n    <div className=\"content\">\n      <h4>Additional Features</h4>\n      {props.additionalFeatures.length ? (\n        <ol type=\"1\">\n          {props.additionalFeatures.map(item => (\n            <AdditionalFeature key={item.id} feature={item} />\n          ))}\n        </ol>\n      ) : (\n        <p>Nice looking car!</p>\n      )}\n    </div>\n  );\n};\n\nexport default AdditionalFeatures;\n","import React from 'react';\n\nconst Total = props => {\n  return (\n    <div className=\"content\">\n      <h4>Total Amount: ${props.car.price + props.additionalPrice}</h4>\n    </div>\n  );\n};\n\nexport default Total;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"./components/Header\";\nimport AddedFeatures from \"./components/AddedFeatures\";\nimport AdditionalFeatures from \"./components/AdditionalFeatures\";\n// import * as actionTypes from \"./store/actions\";\nimport Total from \"./components/Total\";\n\nconst App = props => {\n  return (\n    <div className=\"boxes\">\n      <div className=\"box\">\n        <Header car={props.state.car} />\n        <AddedFeatures car={props.state.car} />\n      </div>\n      <div className=\"box\">\n        <AdditionalFeatures\n          additionalFeatures={props.state.additionalFeatures}\n        />\n        <Total\n          car={props.state.car}\n          additionalPrice={props.state.additionalPrice}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import * as actionTypes from \"../actions\";\n\nconst initialState = {\n  additionalPrice: 0,\n  car: {\n    price: 26395,\n    name: \"2019 Ford Mustang\",\n    image:\n      \"https://cdn.motor1.com/images/mgl/0AN2V/s1/2019-ford-mustang-bullitt.jpg\",\n    features: []\n  },\n  additionalFeatures: [\n    { id: 1, name: \"V-6 engine\", price: 1500 },\n    { id: 2, name: \"Racing detail package\", price: 1500 },\n    { id: 3, name: \"Premium sound system\", price: 500 },\n    { id: 4, name: \"Rear spoiler\", price: 250 }\n  ]\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD:\n      // isolate specific added item in array\n      const addedItem = [...state.additionalFeatures].filter(feature => {\n        return feature.id === action.featureId;\n      });\n\n      // add specific filtered item to features array\n      state.car.features.push(addedItem[0]);\n\n      return {\n        ...state,\n        car: {\n          ...state.car,\n          // use action to add price\n          price: state.car.price + action.featurePrice,\n          features: [\n            // call new array with pushed item\n            ...state.car.features\n          ]\n        },\n        additionalFeatures: [...state.additionalFeatures]\n      };\n    case actionTypes.REMOVE:\n      // filter out specific item to be deleted\n      const removedItem = [...state.car.features].filter((feature, index) => {\n        // use index instead as if added multiple of same\n        // feature, on remove, it removes all with same id\n        return index !== action.featureId;\n        // if you want to remove by same id, use below\n        // return feature.id !== action.featureId;\n      });\n\n      return {\n        ...state,\n        car: {\n          ...state.car,\n          // use action to minus price\n          price: state.car.price - action.featurePrice,\n          features: [...removedItem]\n        },\n        additionalFeatures: [...state.additionalFeatures]\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport reducer from \"./store/reducers\";\nimport \"bulma/css/bulma.css\";\nimport \"./styles.scss\";\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}